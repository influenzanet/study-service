// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.0
// source: study_service/exporter.proto

package api

import (
	api_types "github.com/influenzanet/go-utils/pkg/api_types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseExportQuery_ItemFilter_Mode int32

const (
	ResponseExportQuery_ItemFilter_EXCLUDE ResponseExportQuery_ItemFilter_Mode = 0
	ResponseExportQuery_ItemFilter_INCLUDE ResponseExportQuery_ItemFilter_Mode = 1
)

// Enum value maps for ResponseExportQuery_ItemFilter_Mode.
var (
	ResponseExportQuery_ItemFilter_Mode_name = map[int32]string{
		0: "EXCLUDE",
		1: "INCLUDE",
	}
	ResponseExportQuery_ItemFilter_Mode_value = map[string]int32{
		"EXCLUDE": 0,
		"INCLUDE": 1,
	}
)

func (x ResponseExportQuery_ItemFilter_Mode) Enum() *ResponseExportQuery_ItemFilter_Mode {
	p := new(ResponseExportQuery_ItemFilter_Mode)
	*p = x
	return p
}

func (x ResponseExportQuery_ItemFilter_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseExportQuery_ItemFilter_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_study_service_exporter_proto_enumTypes[0].Descriptor()
}

func (ResponseExportQuery_ItemFilter_Mode) Type() protoreflect.EnumType {
	return &file_study_service_exporter_proto_enumTypes[0]
}

func (x ResponseExportQuery_ItemFilter_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseExportQuery_ItemFilter_Mode.Descriptor instead.
func (ResponseExportQuery_ItemFilter_Mode) EnumDescriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{1, 1, 0}
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{0}
}

func (x *Chunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ResponseExportQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             *api_types.TokenInfos            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudyKey          string                           `protobuf:"bytes,2,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	SurveyKey         string                           `protobuf:"bytes,3,opt,name=survey_key,json=surveyKey,proto3" json:"survey_key,omitempty"`
	From              int64                            `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	Until             int64                            `protobuf:"varint,5,opt,name=until,proto3" json:"until,omitempty"`
	IncludeMeta       *ResponseExportQuery_IncludeMeta `protobuf:"bytes,6,opt,name=include_meta,json=includeMeta,proto3" json:"include_meta,omitempty"`
	ShortQuestionKeys bool                             `protobuf:"varint,7,opt,name=short_question_keys,json=shortQuestionKeys,proto3" json:"short_question_keys,omitempty"`
	Separator         string                           `protobuf:"bytes,8,opt,name=separator,proto3" json:"separator,omitempty"`
	ItemFilter        *ResponseExportQuery_ItemFilter  `protobuf:"bytes,9,opt,name=item_filter,json=itemFilter,proto3" json:"item_filter,omitempty"`
	Page              int32                            `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	PageSize          int32                            `protobuf:"varint,11,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ResponseExportQuery) Reset() {
	*x = ResponseExportQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseExportQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseExportQuery) ProtoMessage() {}

func (x *ResponseExportQuery) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseExportQuery.ProtoReflect.Descriptor instead.
func (*ResponseExportQuery) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseExportQuery) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ResponseExportQuery) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *ResponseExportQuery) GetSurveyKey() string {
	if x != nil {
		return x.SurveyKey
	}
	return ""
}

func (x *ResponseExportQuery) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ResponseExportQuery) GetUntil() int64 {
	if x != nil {
		return x.Until
	}
	return 0
}

func (x *ResponseExportQuery) GetIncludeMeta() *ResponseExportQuery_IncludeMeta {
	if x != nil {
		return x.IncludeMeta
	}
	return nil
}

func (x *ResponseExportQuery) GetShortQuestionKeys() bool {
	if x != nil {
		return x.ShortQuestionKeys
	}
	return false
}

func (x *ResponseExportQuery) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

func (x *ResponseExportQuery) GetItemFilter() *ResponseExportQuery_ItemFilter {
	if x != nil {
		return x.ItemFilter
	}
	return nil
}

func (x *ResponseExportQuery) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ResponseExportQuery) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SurveyInfoExportQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudyKey          string                `protobuf:"bytes,2,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	SurveyKey         string                `protobuf:"bytes,3,opt,name=survey_key,json=surveyKey,proto3" json:"survey_key,omitempty"`
	PreviewLanguage   string                `protobuf:"bytes,4,opt,name=preview_language,json=previewLanguage,proto3" json:"preview_language,omitempty"`
	ShortQuestionKeys bool                  `protobuf:"varint,5,opt,name=short_question_keys,json=shortQuestionKeys,proto3" json:"short_question_keys,omitempty"`
}

func (x *SurveyInfoExportQuery) Reset() {
	*x = SurveyInfoExportQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyInfoExportQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyInfoExportQuery) ProtoMessage() {}

func (x *SurveyInfoExportQuery) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyInfoExportQuery.ProtoReflect.Descriptor instead.
func (*SurveyInfoExportQuery) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{2}
}

func (x *SurveyInfoExportQuery) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SurveyInfoExportQuery) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *SurveyInfoExportQuery) GetSurveyKey() string {
	if x != nil {
		return x.SurveyKey
	}
	return ""
}

func (x *SurveyInfoExportQuery) GetPreviewLanguage() string {
	if x != nil {
		return x.PreviewLanguage
	}
	return ""
}

func (x *SurveyInfoExportQuery) GetShortQuestionKeys() bool {
	if x != nil {
		return x.ShortQuestionKeys
	}
	return false
}

type SurveyInfoExport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Versions []*SurveyVersionPreview `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *SurveyInfoExport) Reset() {
	*x = SurveyInfoExport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyInfoExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyInfoExport) ProtoMessage() {}

func (x *SurveyInfoExport) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyInfoExport.ProtoReflect.Descriptor instead.
func (*SurveyInfoExport) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{3}
}

func (x *SurveyInfoExport) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SurveyInfoExport) GetVersions() []*SurveyVersionPreview {
	if x != nil {
		return x.Versions
	}
	return nil
}

type SurveyVersionPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId   string                   `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Published   int64                    `protobuf:"varint,2,opt,name=published,proto3" json:"published,omitempty"`
	Unpublished int64                    `protobuf:"varint,3,opt,name=unpublished,proto3" json:"unpublished,omitempty"`
	Questions   []*SurveyQuestionPreview `protobuf:"bytes,4,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *SurveyVersionPreview) Reset() {
	*x = SurveyVersionPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyVersionPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyVersionPreview) ProtoMessage() {}

func (x *SurveyVersionPreview) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyVersionPreview.ProtoReflect.Descriptor instead.
func (*SurveyVersionPreview) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{4}
}

func (x *SurveyVersionPreview) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SurveyVersionPreview) GetPublished() int64 {
	if x != nil {
		return x.Published
	}
	return 0
}

func (x *SurveyVersionPreview) GetUnpublished() int64 {
	if x != nil {
		return x.Unpublished
	}
	return 0
}

func (x *SurveyVersionPreview) GetQuestions() []*SurveyQuestionPreview {
	if x != nil {
		return x.Questions
	}
	return nil
}

type SurveyQuestionPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string                `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Title        string                `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	QuestionType string                `protobuf:"bytes,3,opt,name=question_type,json=questionType,proto3" json:"question_type,omitempty"`
	Responses    []*ResponseDefPreview `protobuf:"bytes,4,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *SurveyQuestionPreview) Reset() {
	*x = SurveyQuestionPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyQuestionPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyQuestionPreview) ProtoMessage() {}

func (x *SurveyQuestionPreview) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyQuestionPreview.ProtoReflect.Descriptor instead.
func (*SurveyQuestionPreview) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{5}
}

func (x *SurveyQuestionPreview) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SurveyQuestionPreview) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SurveyQuestionPreview) GetQuestionType() string {
	if x != nil {
		return x.QuestionType
	}
	return ""
}

func (x *SurveyQuestionPreview) GetResponses() []*ResponseDefPreview {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ResponseDefPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ResponseTypes string                   `protobuf:"bytes,2,opt,name=response_types,json=responseTypes,proto3" json:"response_types,omitempty"`
	Label         string                   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Options       []*ResponseOptionPreview `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *ResponseDefPreview) Reset() {
	*x = ResponseDefPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDefPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDefPreview) ProtoMessage() {}

func (x *ResponseDefPreview) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDefPreview.ProtoReflect.Descriptor instead.
func (*ResponseDefPreview) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseDefPreview) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResponseDefPreview) GetResponseTypes() string {
	if x != nil {
		return x.ResponseTypes
	}
	return ""
}

func (x *ResponseDefPreview) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ResponseDefPreview) GetOptions() []*ResponseOptionPreview {
	if x != nil {
		return x.Options
	}
	return nil
}

type ResponseOptionPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	OptionType string `protobuf:"bytes,2,opt,name=option_type,json=optionType,proto3" json:"option_type,omitempty"`
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ResponseOptionPreview) Reset() {
	*x = ResponseOptionPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOptionPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOptionPreview) ProtoMessage() {}

func (x *ResponseOptionPreview) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOptionPreview.ProtoReflect.Descriptor instead.
func (*ResponseOptionPreview) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseOptionPreview) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResponseOptionPreview) GetOptionType() string {
	if x != nil {
		return x.OptionType
	}
	return ""
}

func (x *ResponseOptionPreview) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type ResponseExportQuery_IncludeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position       bool `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	InitTimes      bool `protobuf:"varint,3,opt,name=init_times,json=initTimes,proto3" json:"init_times,omitempty"`
	DisplayedTimes bool `protobuf:"varint,4,opt,name=displayed_times,json=displayedTimes,proto3" json:"displayed_times,omitempty"`
	ResponsedTimes bool `protobuf:"varint,5,opt,name=responsed_times,json=responsedTimes,proto3" json:"responsed_times,omitempty"`
}

func (x *ResponseExportQuery_IncludeMeta) Reset() {
	*x = ResponseExportQuery_IncludeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseExportQuery_IncludeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseExportQuery_IncludeMeta) ProtoMessage() {}

func (x *ResponseExportQuery_IncludeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseExportQuery_IncludeMeta.ProtoReflect.Descriptor instead.
func (*ResponseExportQuery_IncludeMeta) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResponseExportQuery_IncludeMeta) GetPosition() bool {
	if x != nil {
		return x.Position
	}
	return false
}

func (x *ResponseExportQuery_IncludeMeta) GetInitTimes() bool {
	if x != nil {
		return x.InitTimes
	}
	return false
}

func (x *ResponseExportQuery_IncludeMeta) GetDisplayedTimes() bool {
	if x != nil {
		return x.DisplayedTimes
	}
	return false
}

func (x *ResponseExportQuery_IncludeMeta) GetResponsedTimes() bool {
	if x != nil {
		return x.ResponsedTimes
	}
	return false
}

type ResponseExportQuery_ItemFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string                            `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Mode ResponseExportQuery_ItemFilter_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=influenzanet.study_service.ResponseExportQuery_ItemFilter_Mode" json:"mode,omitempty"`
}

func (x *ResponseExportQuery_ItemFilter) Reset() {
	*x = ResponseExportQuery_ItemFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_study_service_exporter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseExportQuery_ItemFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseExportQuery_ItemFilter) ProtoMessage() {}

func (x *ResponseExportQuery_ItemFilter) ProtoReflect() protoreflect.Message {
	mi := &file_study_service_exporter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseExportQuery_ItemFilter.ProtoReflect.Descriptor instead.
func (*ResponseExportQuery_ItemFilter) Descriptor() ([]byte, []int) {
	return file_study_service_exporter_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ResponseExportQuery_ItemFilter) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ResponseExportQuery_ItemFilter) GetMode() ResponseExportQuery_ItemFilter_Mode {
	if x != nil {
		return x.Mode
	}
	return ResponseExportQuery_ItemFilter_EXCLUDE
}

var File_study_service_exporter_proto protoreflect.FileDescriptor

var file_study_service_exporter_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x16, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x22, 0xa5, 0x06, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75,
	0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x5e, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x69,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x5b, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x1a, 0x9a, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x1a,
	0x97, 0x01, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x53, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x72, 0x0a, 0x10, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4c, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x4f, 0x0a,
	0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb2,
	0x01, 0x0a, 0x15, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75,
	0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65,
	0x66, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x65, 0x66, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x4b, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6e, 0x66,
	0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x60, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61,
	0x6e, 0x65, 0x74, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_study_service_exporter_proto_rawDescOnce sync.Once
	file_study_service_exporter_proto_rawDescData = file_study_service_exporter_proto_rawDesc
)

func file_study_service_exporter_proto_rawDescGZIP() []byte {
	file_study_service_exporter_proto_rawDescOnce.Do(func() {
		file_study_service_exporter_proto_rawDescData = protoimpl.X.CompressGZIP(file_study_service_exporter_proto_rawDescData)
	})
	return file_study_service_exporter_proto_rawDescData
}

var file_study_service_exporter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_study_service_exporter_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_study_service_exporter_proto_goTypes = []interface{}{
	(ResponseExportQuery_ItemFilter_Mode)(0), // 0: influenzanet.study_service.ResponseExportQuery.ItemFilter.Mode
	(*Chunk)(nil),                            // 1: influenzanet.study_service.Chunk
	(*ResponseExportQuery)(nil),              // 2: influenzanet.study_service.ResponseExportQuery
	(*SurveyInfoExportQuery)(nil),            // 3: influenzanet.study_service.SurveyInfoExportQuery
	(*SurveyInfoExport)(nil),                 // 4: influenzanet.study_service.SurveyInfoExport
	(*SurveyVersionPreview)(nil),             // 5: influenzanet.study_service.SurveyVersionPreview
	(*SurveyQuestionPreview)(nil),            // 6: influenzanet.study_service.SurveyQuestionPreview
	(*ResponseDefPreview)(nil),               // 7: influenzanet.study_service.ResponseDefPreview
	(*ResponseOptionPreview)(nil),            // 8: influenzanet.study_service.ResponseOptionPreview
	(*ResponseExportQuery_IncludeMeta)(nil),  // 9: influenzanet.study_service.ResponseExportQuery.IncludeMeta
	(*ResponseExportQuery_ItemFilter)(nil),   // 10: influenzanet.study_service.ResponseExportQuery.ItemFilter
	(*api_types.TokenInfos)(nil),             // 11: influenzanet.shared.TokenInfos
}
var file_study_service_exporter_proto_depIdxs = []int32{
	11, // 0: influenzanet.study_service.ResponseExportQuery.token:type_name -> influenzanet.shared.TokenInfos
	9,  // 1: influenzanet.study_service.ResponseExportQuery.include_meta:type_name -> influenzanet.study_service.ResponseExportQuery.IncludeMeta
	10, // 2: influenzanet.study_service.ResponseExportQuery.item_filter:type_name -> influenzanet.study_service.ResponseExportQuery.ItemFilter
	11, // 3: influenzanet.study_service.SurveyInfoExportQuery.token:type_name -> influenzanet.shared.TokenInfos
	5,  // 4: influenzanet.study_service.SurveyInfoExport.versions:type_name -> influenzanet.study_service.SurveyVersionPreview
	6,  // 5: influenzanet.study_service.SurveyVersionPreview.questions:type_name -> influenzanet.study_service.SurveyQuestionPreview
	7,  // 6: influenzanet.study_service.SurveyQuestionPreview.responses:type_name -> influenzanet.study_service.ResponseDefPreview
	8,  // 7: influenzanet.study_service.ResponseDefPreview.options:type_name -> influenzanet.study_service.ResponseOptionPreview
	0,  // 8: influenzanet.study_service.ResponseExportQuery.ItemFilter.mode:type_name -> influenzanet.study_service.ResponseExportQuery.ItemFilter.Mode
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_study_service_exporter_proto_init() }
func file_study_service_exporter_proto_init() {
	if File_study_service_exporter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_study_service_exporter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseExportQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyInfoExportQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyInfoExport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyVersionPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyQuestionPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDefPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOptionPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseExportQuery_IncludeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_study_service_exporter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseExportQuery_ItemFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_study_service_exporter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_study_service_exporter_proto_goTypes,
		DependencyIndexes: file_study_service_exporter_proto_depIdxs,
		EnumInfos:         file_study_service_exporter_proto_enumTypes,
		MessageInfos:      file_study_service_exporter_proto_msgTypes,
	}.Build()
	File_study_service_exporter_proto = out.File
	file_study_service_exporter_proto_rawDesc = nil
	file_study_service_exporter_proto_goTypes = nil
	file_study_service_exporter_proto_depIdxs = nil
}
